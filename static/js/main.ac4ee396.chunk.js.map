{"version":3,"sources":["config.js","image-helpers.js","post-box.jsx","App.js","index.js"],"names":["dataset","projectId","apiVersion","token","useCdn","builder","imageUrlBuilder","config","buildImageObj","source","imageObj","asset","_ref","_id","crop","hotspot","text","title","writer","date","image","className","split","length","slice","join","src","width","height","Math","floor","url","alt","fullName","client","sanityClient","App","useState","posts","setPosts","useEffect","fetch","then","data","error","console","log","href","target","rel","map","post","indx","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAe,GACXA,QAAS,aACTC,UAAW,WACXC,WAAY,aACZC,MAAO,uLACPC,QAAQ,G,QCHNC,E,MAAUC,GAAgBC,GAMzB,SAASC,EAAcC,GAC1B,IAAMC,EAAW,CACfC,MAAO,CAAEC,KAAMH,EAAOE,MAAMC,MAAQH,EAAOE,MAAME,MAMnD,OAHIJ,EAAOK,OAAMJ,EAASI,KAAOL,EAAOK,MACpCL,EAAOM,UAASL,EAASK,QAAUN,EAAOM,SAEvCL,E,WCdI,kBDEaD,ECFVO,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,MAA9B,OACX,sBAAKC,UAAU,WAAf,UACE,6BAAKJ,IACL,8BAEED,EAAKM,MAAM,KAAKC,OAAS,GAAKP,EAAOA,EAAKM,MAAM,KAAKE,MAAM,EAAG,IAAIC,KAAK,KAFzE,SAIA,qBACEC,IACEN,GDPkBX,ECQJD,EAAcY,GDP3Bf,EAAQe,MAAMX,ICQZkB,MAAM,KACNC,OAAOC,KAAKC,MAAO,QACnBC,MAAQ,4DAEfC,IAAI,KAEJ,6BAAU,OAANd,QAAM,IAANA,OAAA,EAAAA,EAAQe,WAAY,KACxB,4BAAId,QCdJe,EAASC,IAAa5B,GAiCb6B,MA/Bf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAaA,OAZAC,qBAAU,WACR,IAEEN,EAAOO,MADO,sBACMC,MAAK,SAACC,GACxBJ,EAASI,MAEX,MAAOC,GACPC,QAAQC,IAAIF,MAEb,IAID,sBAAKvB,UAAU,MAAf,UACE,yBAAQA,UAAU,SAAlB,UACE,sEACA,8BACE,mBAAG0B,KAAK,sGAAsGC,OAAO,SAASC,IAAI,aAAlI,wBADF,KAEE,mBAAGF,KAAK,wCAAwCC,OAAO,SAASC,IAAI,aAApE,sBAFF,KAGE,mBAAGF,KAAK,qDAAqDC,OAAO,SAASC,IAAI,aAAjF,0BAGJ,qBAAK5B,UAAU,OAAf,SACGiB,EAAMY,KAAI,SAACC,EAAMC,GAAP,OAAgB,cAAC,EAAD,eAAwBD,GAAVC,YC5BjDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ac4ee396.chunk.js","sourcesContent":["export default {\n    dataset: \"production\",\n    projectId: \"lge34mjy\",\n    apiVersion: \"2021-10-19\",\n    token: \"sk6yeddeC313fuCZjy2FDXv9GGhpyLX0pREmHmZr5VlAgRmLLoudTQIAulOA7mneu2HbjsVr9SMtUbCCxTFCO7ZxuVSBmmcTK0RhyLxvEn2mnoI6cq0rs9OGb7vIg9pirKleP7Xa9sLJEiKAxm3LkrTC0tUVF3iaLPGo8TTJxKdrMXtexWR8\",\n    useCdn: false,\n};","import imageUrlBuilder from \"@sanity/image-url\";\nimport config from './config'\nconst builder = imageUrlBuilder(config)\n\nexport function imageUrlFor(source) {\n    return builder.image(source);\n}\n  \nexport function buildImageObj(source) {\n    const imageObj = {\n      asset: { _ref: source.asset._ref || source.asset._id }\n    };\n  \n    if (source.crop) imageObj.crop = source.crop;\n    if (source.hotspot) imageObj.hotspot = source.hotspot;\n  \n    return imageObj;\n}\n","import { imageUrlFor, buildImageObj } from './image-helpers'\n\nexport default ({ text, title, writer, date, image }) => (\n    <div className=\"post-box\">\n      <h1>{title}</h1>\n      <p>\n        {// first 20 words\n        text.split(' ').length < 20 ? text : text.split(' ').slice(0, 20).join(' ')}...\n      </p>\n      <img \n        src={ \n          image?\n            imageUrlFor(buildImageObj(image))\n            .width(600)\n            .height(Math.floor((9 / 16) * 600))\n            .url() : \"https://neilpatel.com/wp-content/uploads/2017/08/blog.jpg\"\n          }\n      alt=\"\"\n      />\n      <p>{writer?.fullName || ''}</p>\n      <p>{date}</p>\n    </div>\n)","import './App.css';\nimport sanityClient from \"@sanity/client\";\nimport React, { useState, useEffect } from 'react';\nimport config from './config'\nimport PostBox from './post-box'\n\nconst client = sanityClient(config);\n\nfunction App() {\n  const [posts, setPosts] = useState([])\n  useEffect(() => {\n    try{\n      const query = \"*[_type == 'post']\"\n      client.fetch(query).then((data) => {\n        setPosts(data)\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }, [])\n  \n  \n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1> Wellcome to my Sanity sandbox blog!</h1>\n        <p>\n          <a href=\"https://recolabs.atlassian.net/wiki/spaces/DIAR/blog/2021/10/19/658145283/Miryam+Work+Blog+20210119\" target=\"_blank\" rel=\"noreferrer\"> Tutorial </a> | \n          <a href=\"https://miryamoren.sanity.studio/desk\" target=\"_blank\" rel=\"noreferrer\"> Studio </a> | \n          <a href=\"https://github.com/MiryamOren-RecoLabs/Sanity-Demo\" target=\"_blank\" rel=\"noreferrer\"> Code </a> \n        </p>\n      </header>\n      <div className=\"main\">\n        {posts.map((post, indx) => <PostBox key={indx} {...post}/>)}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}